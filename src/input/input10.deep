network MultilayerPerceptron {
    layer input {
        type: Dense;
        units: 512;
        activation: Relu;
        input_shape: [20];
    }
    layer hidden1 {
        type: Dense;
        units: 256;
        activation: Relu;
    }
    layer hidden2 {
        type: Dense;
        units: 128;
        activation: Sigmoid;
    }
    layer hidden3 {
        type: Dense;
        units: 64;
        activation: Tanh;
    }
    layer output {
        type: Dense;
        units: 10;
        activation: Softmax;
    }
    training {
        optimizer: rmsprop;
        loss: SparseCategoricalCrossentropy;
        metric: [accuracy, loss];
        epochs: 100;
        batch_size: 64;
        validation_split: 0.1;
    }
    visualize {
        grid: [8, 8];
    }
    evaluate {
        metric: [accuracy, loss];
    }
}
